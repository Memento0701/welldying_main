import React from 'react';
import { match } from 'react-router';
import Footer from '../components/Footer';
import Header from '../components/Header';
import PopupPostCode from '../components/PopupPostCode';
import { bigCardVector, cardVector, checkVector, leftVector, paycoVector, phoneVector } from '../img/Vectors';
import useScroll from '../etc/useScroll';
import { Link } from 'react-router-dom';
import { productInformationArray } from './ProductPage';
import { addNewOrder, getOrderData, OrderType, rspSuccess } from '../etc/api/payment';

interface MatchParams {
    id?: string;
};

interface Props {
    match: match<MatchParams>;
};

export interface purchaseMethodInterface {
    vector: any;
    name: string;
    kgName: string;
}

const purchaseMethodArray: purchaseMethodInterface[] = [
    {vector: phoneVector, name: "휴대폰", kgName: "phone"},
    {vector: cardVector, name: "카드", kgName: "card"},
    {vector: cardVector, name: "무통장 입금", kgName: "trans"},
    {vector: paycoVector, name: "페이코", kgName: "payco"}
];

const agreeText1 = `****개인정보 수집 이용 동의****

메멘토(이하, 회사)의 서비스를 이용하는 분께 개인정보 보호법 및 정보통신망 이용촉진 및 정보보호 등에 관한 법률에 따라 수집하는 개인정보의 항목 및 수집방법, 개인정보의 수집 및 이용목적, 개인정보의 보유 및 이용기간 및 동의 거부 시 불이익을 안내 드리오니 자세히 읽은 후 동의하여 주시기 바랍니다.

**1. 수집 및 이용하는 개인정보 항목 및 수집방법**

회사는 개인정보를 수집함에 있어 이용자의 유형별로 서비스 제공에 필요한 최소한의 개인정보를 “필수항목”으로, 그 외 개인정보는 “선택항목”으로 구분하여 이에 대해 개별적으로 동의할 수 있는 절차를 마련합니다.

(1) 수집 및 이용하는 개인정보 항목
ㄱ. 온라인 사이트 비회원 (주문)
- 필수사항: (주문자이자 수령자) 성명, 전화번호(휴대전화번호 포함), 주소, 이메일주소
- 선택사항: 은행계좌정보, 휴대폰 결제 시 휴대전화번호, 현금영수증 신청 시 현금영수증 정보(성명, 휴대전화번호), 결제정보, 구매이력, 배송정보, 배송관련 추가 휴대전화번호, 환불/반품/수선이력, 상담내역, 기타 서비스 이용 내역
※ 대금결제 시 수집하는 개인정보는 결제대행업체(PG)사에서 수집 및 저장하고 있으며, 회사는 결제대행업체에서 제공하는 거래내역 만을 제공받고 있습니다.
ㄴ. 서비스 이용과정 또는 처리 과정에서 생성정보 수집 툴을 통해 자동으로 생성, 수집되어 수집, 저장, 조합, 분석 시
- 필수사항: 이용자의 인터넷 도메인명 및 사이트를 방문할 때 거치 웹사이트의 주소, 서비스 이용 내역, 요금청구 및 결제기록, 이용정지 기록, 이용 해지 기록 등 이용내역 정보, 접속로그, 쿠키, 접속IP정보, 단말기 정보 브라우저 및 OS 정보
- 선택사항: 서비스 개선, 관심분야 확인 및 맞춤서비스 제공
(2) 개인정보 수집 방법
1) 회사는 사이트 회원가입 및 서비스 이용 과정 또는 매장에서 이용자가 개인정보 수집에 동의를 하고 직접 정보를 입력하는 경우, 해당 개인정보를 수집합니다.
2) 고객센터를 통한 상담 과정에서 웹페이지, 메일, 팩스, 전화 등을 통해 이용자의 개인정보가 수집될 수 있습니다.
3) 온/오프라인 이벤트나 경품 행사 등에서 전자적 방식 또는 서면으로 개인정보가 수집될 수 있습니다.
4) 회사와 제휴한 업체나 단체로부터 개인정보를 제공받을 수 있으며, 이러한 경우에는 개인정보 보호법에 따라 제휴사에서 이용자에게 개인정보 제공 동의 등을 받을 후 회사에 제공합니다.
5) 접속로그, 쿠키, IP정보, 기기정보 등의 생성정보는 PC웹, 모바일웹 이용과정에서 로그 분석 수집툴을 통해 자동으로 생성되어 수집될 수 있습니다.

**2. 개인정보의 수집 및 이용 목적**

회사는 이용자의 유형 및 서비스 이용 목적에 따른 서비스 이용 의사를 확인하고, 이용자에게 최적화된 서비스를 제공하기 위해 다음과 같은 목적으로 개인정보를 수집합니다. 회사는 수집된 개인정보를 목적 이외에 다른 용도로 이용하지 않으며, 개인정보 이용 목적이 다르거나 서비스 이용에 요구되는 개인정보의 수집 및 이용은 선택사항으로 이용자의 별도의 동의를 받습니다.

**1) 회원가입 및 이용자 관리**: 회원 가입의사 확인, 가입 및 가입횟수 제한, 회원제 서비스 제공에 따른 본인확인 및 식별, 연령확인 및 인증, 회원자격 유지 및 관리(쿠폰 발행, 쿠폰 및 사은품 전송, 회원자격 및 이벤트 제한 대상 확인 등), 제한적 본인확인제 시행에 따른 본인 확인, 비인가된 서비스 이용 방지, 명의도용, 부정거래 내지 부정이용 등 서비스의 원활한 제공에 지장을 주는 행위에 대한 방지 및 제재, 기록보존, 회원정보 관리, 각종 고지 및 통지, 고충처리 등

**2) 재화 또는 서비스 제공**: 주문자 및 수령자 확인 및/또는 본인인증, 구매연령 확인, 대금결제, 계약서 및 청구서 발송, 콘텐츠 제공, 입고 알림 서비스 제공, 신상품이나 이벤트 정보 안내, 맞춤서비스 제공, 구매 물품 배송에 따른 정확한 배송지의 확보, 주문내역 조회 및 구매 확인, 고지사항 전달, 요금 추심 등

**3) 마케팅 및 광고에 활용**: 새로운 서비스, 신상품이나 이벤트 정보 등 최신 정보의 안내, 인구통계학적 특성에 따른 서비스 제공 및 광고 게재, 접속 빈도 파악, 서비스 이용 분석 및 통계, 서비스품질 향상을 위한 각종 설문조사, 회원 유형 및 관심분야 등에 따른 맞춤서비스 제공, 이벤트 운영 및 사은품 등 제공

**4) 문의 및 고충처리**: 구매유형에 따른 소비자의 각종 문의 및 불만처리, 분쟁 해결을 위한 고객센터 운영을 위한 민원인의 신원 확인, 민원사항 확인, 사실조사를 위한 연락, 통지, 처리결과 통보, 요금추심 등 기타 문의 및 불만처리, 분쟁해결을 위한 기록 보존 및 원활한 의사소통 경로의 확보

**3. 개인정보의 처리 및 보유기간**

(1) 이용자의 개인정보는 회사가 이용자에게 서비스를 제공하는 기간 동안 다음과 같이 보유 및 이용됩니다. 회사는 회원 탈퇴(간편 로그인/가입 서비스 이용자의 경우 연동해제 또는 회원 탈퇴) 또는 이용자의 개인정보 파기 사유 발생 시 수집된 개인의 정보가 열람 또는 이용될 수 없도록 회사가 정하는 절차에 따라 지체없이 그 개인정보를 즉시 파기, 삭제 처리하며, 개인정보의 처리위탁 시 수탁자에게도 개인정보 파기를 지시합니다.

1) 회원가입 및 관리: 회원 탈퇴 시(또는 연동해제 시)까지. 
단, i) 관계법령에 따른 수사 조사 등이 진행 중인 경우 수사 조사 종료 시, ii) 서비스 이용에 따른 채권 채무관계 잔존 시 해당 채권 채무관계 정산 시, iii) 포인트 및 쿠폰 부정적립 및 부정사용, 기타 회원 자격 및 이벤트 제한 사유 발생 시 회원 탈퇴 시부터 6개월 간 보관 후 파기, iv) 회원 식별정보 중복 시 일정기간 동안 본인확인을 완료하지 않는 경우 즉시 파기. 본 항에 따른 파기 시 관계법령에서 개인정보 전부 또는 일부의 보관을 요구하는 경우 해당 법령에 따른 기간동안 보관 후 파기
2) 재화 또는 서비스 제공: 재화 또는 서비스의 공급 완료, 요금 정산 완료 시까지. 단, 관계법령에서 요구하는 경우 해당 법령에 따른 기간동안 보관 후 파기
3) 마케팅 및 광고에 활용: 회원 탈퇴 시, 보유기간 만료 시(개인정보 수집 및 이용 동의 시 정한 바에 따름) 또는 맞춤형 광고 제공을 위해 자동으로 생성된 정보의 경우 쿠키 수집시부터 최대 2년간 보관 후 파기). 단, 포인트 쿠폰 부정적립 및 부정사용, 기타 회원 자격 및 이벤트 제한 사유 발생 시 회원 탈퇴 시 또는 보유기간 도과 시부터 6개월 간 보관 후 파기.
4) 문의 및 고충처리: 문의 및 고충 처리 완료 시부터 3년간 보관 후 파기. 단, 하자 유무 판정에 대한 처리결과 문자메시지 통지이력은 문자메시지 발송시점부터 1개월 후 파기(하자 유무 판정 내역은 3년간 보관 후 파기).
5) 서비스 이용과정 또는 처리 과정에서 자동으로 생성, 수집되어 수집, 저장, 조합, 분석: 쿠키 수집일로부터 2년

(2) 제1항에도 불구하고, 회사는 관계법령의 규정에 따라 아래와 같이 보존할 필요성이 있는 경우에는 일정기간 동안 개인정보를 보존할 수 있으며, 보존하여야 하는 개인정보 또는 개인정보 파일은 다른 개인정보와 분리하여서 저장, 관리합니다.
* 계약 또는 청약철회, 대금결제 및 재화 등의 공급에 관한 기록
- 보존이유 : 전자상거래등에서의 소비자보호에 관한 법률
- 보존기간 : 5년
* 소비자의 불만 또는 분쟁처리에 관한 기록
- 보존이유 : 전자상거래등에서의 소비자보호에 관한 법률
- 보존기간 : 3년
* 표시•광고에 관한 기록
- 보존이유 : 전자상거래등에서의 소비자보호에 관한 법률
- 보존기간 : 6개월
* 로그기록, IP 등 법원의 영장을 받아 수사기관이 요청 시 제공
- 보존이유: 통신비밀보호법
- 보존기간: 3개월
* 기타 법령에 따라 보존되는 개인정보 및 그 보존기간
* 이용자가 동의한 경우 그 개인정보 및 보존기간

3. 회사는 관련 법령에 따라 휴면 회원의 개인정보를 파기 하거나 접근이 불가능한 별도의 보관장치에 분리 보관합니다.
1) 관련 법령 : 개인정보 보호법 제39조의6 및 동법 시행령 제48조의5
2) 다음 조건을 모두 만족하는 경우에 휴면 회원으로 전환됩니다.
가. 거래 이력, 리클럽 서비스를 1년 이상 이용하지 않은 회원
나. 사이트(PC/모바일웹) 로그인 이력이 1년 이상 없는 회원
다. 회원의 요청에 따라 서비스 미이용 기간(1년, 3년 또는 회원탈퇴 시)을 정하였음에도, 해당 기간 동안 포인트 거래이력, 리클럽 서비스 이용, 사이트 로그인 이력이 없는 회원
3) 회사는 휴면 전환 30일 전까지 휴면 예정 회원에게 i. 개인정보를 파기하는 경우: 개인정보가 파기되는 사실, 기간 만료일 및 파기되는 개인정보의 항목 또는 ii. 다른이용자의 개인정보와 분리하여 개인정보를 저장, 관리하는 경우: 별도 분리 보관되는 사실 및 휴면 예정일, 별도 분리 보관하는 개인정보 항목을 이메일 또는 문자 전송 등의 방법으로 이용자에게 알립니다.
4) 휴면 상태 이전에 발급되었던 쿠폰은 해당 유효기간 만료 시 자동 소멸되며, 기간이 만료된 쿠폰은 재발행되지 아니합니다.
5) (회사가 휴면회원의 개인정보를 분리보관하는 경우에 한하여) 휴면 회원이 포인트 거래, 사이트 로그인 등 "리클럽" 서비스를 재이용하는 경우 휴면계정은 일반 회원 계정으로 복구됩니다.
6) 휴면 상태인 회원의 개인정보를 관계법령(예: 전자상거래등에서의 소비자보호에 관한 법률)에 따라 보존 또는 별도 분리 보관해야 하는 경우 관계법령에서 정한 기간 도과 시 회사는 별도의 통지 없이 휴면회원의 개인정보를 즉시 파기합니다.
4. 회사는 개인정보 보유기간 동안 이용자와의 거래 관련 권리 의무 관계의 확인을 위하여 또는 특정 서비스를 제공하기 위하여 일정기간 보유하여야 할 필요가 있을 경우 개인정보는 일정기간 보유되며, 이 때 보유되는 개인정보의 열람 및 이용은 해당 사유로 국한되고, 사전에 보유목적, 기간 및 보유하는 개인정보 항목을 명시합니다.
5. 회사는 개인정보 파기 사유 발생시 다음과 같은 방법으로 개인정보를 파기합니다.
1) 종이에 출력된 개인정보는 분쇄기로 분쇄하거나 소각을 통하여 파기합니다.
2) 전자적 파일 형태로 저장된 개인정보는 기록을 복구 또는 재생할 수 없는 기술적 방법 또는 물리적 방법을 사용하여 삭제합니다.

**4. 동의 거부 시 불이익**

(1) 이용자는 회사의 개인정보 수집 이용에 동의하지 않을 수 있으나, “필수항목”에 대한 동의 거부 시 회원가입 거부, 서비스 이용이 제한되는 등의 불이익이 있습니다.
(2) 회사는 이용자가 필요한 최소한의 개인정보 이외의 개인정보를 수집에 동의하지 않는다는 이유로 본질적인 서비스의 제공을 거부하지 않으나, “선택항목” 수집 및 이용에 동의하지 않는 경우 서비스 제공에 일정한 제약이 발생할 수 있습니다.`;
const agreeText2 = `### **구매 이용약관**

### **제1장 총칙**

### **제1조 (목적)**

이 이용약관(이하 “약관” 또는 “이용계약”)은 메멘토(이하 “회사”)가 운영하는 웹사이트 및 모바일 페이지 등(이하 “사이트”)에서 제공하는 인터넷 관련 서비스, 회사가 운영하는 공식 매장의 운영 및 회원제 서비스(이하 “서비스”)를 이용함에 있어 회사와 이용자의 권리•의무 및 책임 사항을 규정함을 목적으로 합니다.

### **제2조 (용어의 정의)**

1. 본 약관에서 정하는 용어의 정의는 다음과 같습니다.
① “사이트”란 회사가 컴퓨터, 이동통신 등의 각종 유무선 장치를 포함하는 정보통신설비를 이용하여 상품이나 서비스를 이용자에게 제공할 수 있도록 설정한 가상공간을 말하며, 회사가 운영하고 있는 사이트의 현황은 아래와 같습니다. (2021. 11. 25 기준)-[https://mymemento.kr](https://mymemento.kr/)- 향후 회사에서 공지하고 운영하는 웹사이트 및 모바일 앱 등
② “이용자”란 사이트에 접속하거나 회사가 운영하는 공식 매장(즉, 직영점)에 방문하여 이 약관에 따라 회사가 제공하는 서비스를 받는 회원 및 비회원을 말합니다.
③ “회원”이라 함은 회사에 개인정보 및 회사정보를 제공하여 회원등록을 한 자로서, 회사가 제공하는 정보(상품 및 서비스, 마케팅 정보 등)를 지속적으로 제공받으며, 회사가 제공하는 서비스를 계속적으로 이용할 수 있는 자를 말합니다.
④ “비회원”이라 함은 회원으로 가입하지 않고 회사가 제공하는 서비스를 이용하는 자를 말합니다.
⑤ "개인정보”란 생존하는 개인에 관한 정보로서 성명, 주민등록번호 등의 사항에 의하여 특정 개인을 식별할 수 있는 정보(당해 정보만으로는 특정 개인을 인식할 수 없더라도 다른 정보와 용이하게 결합하여 식별할 수 있는 것을 포함)를 말합니다.
⑥ “아이디”란 회원의 식별과 회원의 서비스 이용을 위하여 회원이 설정하고 회사가 승인하여 회사에 등록된 영문, 숫자 또는 영문과 숫자의 조합을 말합니다.
⑦ “비밀번호”란 회원의 동일성 확인을 위하여 회원 스스로가 설정하여 회사에 등록된 영문과 숫자의 조합을 말합니다.
⑧ “회원등급”이란 회사가 제공하는 서비스를 이용한 결과에 따라 일정한 기준에 의하여 회사가 회원에게 부여하는 등급을 말합니다.
⑨“게시글”이란 이용자가 “서비스”를 이용함에 있어 “사이트”에 게시한 글, 사진, 동영상 및 각종 파일과 링크 등의 게재물을 말합니다.
⑩ “상품평”이란 게시글 중 상품 구매 후 해당 상품에 대한 종합적인 평가를 기록한 글, 이미지 등의 게재물을 말합니다. 회사는 회사 및 회사의 본사 기타 계열회사가 운영하는 사이트 또는 제휴한 사이트, 홍보채널 등에서의 상품의 판촉, 홍보 등을 위해 상품평을 복제, 배포, 전송, 전시할 수 있으며 본질적인 내용에 변경을 가하지 않는 범위 내에서 수정, 편집할 수 있습니다.
⑪ “포인트” 란 회원이 상품을 구매할 때나, 회사가 제공하는 서비스를 이용할 때 회사가 제공하는 적립금을 의미하며, 환금 불가능한 회사 전용의 재산적 가치가 없는 사이버 데이터를 말하며, 일정 금액에 달한 포인트는 “쿠폰”으로 자동 전환되며 회원은 상품 구매 시 쿠폰을 사용할 수 있습니다.
⑫ “서비스”란 제4조에 정한 바 대로 회사가 사이트 및 매장 등을 통하여 이용자를 위하여 유료 또는 무료로 제공하는 행위 또는 그 행위의 대상인 유•무형의 물건 자체를 의미합니다.
⑬ “개별계약”이란 이용자가 회사의 특정 상품이나 용역의 구매를 신청하고 회사가 이에 대해 승낙하는 것을 말합니다.
2. 이 약관에서 사용하는 용어의 정의는 제1항에서 정하는 것을 제외하고는 관계법령 및 서비스 별 안내에서 정하는 바에 의합니다.

### **제3조 (약관의 명시 효력 및 변경)**

1. 이 약관은 이용자들이 알 수 있도록 회사의 서비스가 제공되는 사이트의 첫 화면에 게시하거나 기타의 방법으로 회원에게 공지함으로써 효력이 발생합니다.단, 약관의 내용은 이용자가 연결화면을 통하여 볼 수 있도록 할 수 있습니다.
2. 회사는 전자상거래등에서의소비자보호에관한법률, 약관의규제등에관한법률, 전자거래기본법, 전자서명법, 정보통신망이용촉진등에관한법률, 소비자보호법, 개인정보보호법 등 관련 법령을 위배하지 않는 범위에서 이 약관을 개정할 수 있으며, 회사가 약관을 변경하는 경우에는 적용일자 및 변경사유를 명시하여 그 적용일자 7일 전부터 사이트에 공지합니다.단, 이용자에게 불리한 약관의 변경인 경우에는 30일 이전에 전체 공지(사이트 내 팝업창, 공지사항 페이지 내 또는 오프라인 매장 공지 등 회사가 정한 방법)로써 공지를 하며, 공지 시 개정 전 내용과 개정 후 내용을 명확하게 비교하여 이용자가 알기 쉽도록 표시니다.
3. 전 항에도 불구하고 이용자가 정기적으로 회사가 운영하는 사이트 또는 매장 등에 방문하여 회사의 서비스를 이용하는 경우 약관의 변경에 동의하는 것으로 봅니다. 변경된 약관에 대한 정보를 알지 못하여 발생하는 회원 또는 이용자의 피해에 대하여 회사는 책임을 부담하지 않습니다.

### **제2장 서비스의 이용**

### **제4조 (서비스의 제공)**

1. 회사는 다음과 같은 서비스를 제공합니다.
① 쇼핑관련 정보 제공 서비스
② 회원 커뮤니티 운영 서비스
③ 사이트 또는 매장에서 상품 또는 용역에 대한 정보의 제공 및 구매 계약 체결
④ 이용자가 사이트 또는 매장에서 구매 신청한 상품 또는 용역의 인도, 배송
⑤ 기타 사이트가 정하는 이용자에게 유용한 부가 서비스
2. 회사는 회원 또는 이용자가 사용하는 서비스에 대해 일정량의 사용료를 청구 할 수 있습니다.
3. “사이트”를 통한 서비스 이용은 회사의 업무상 기술상 특별한 지장이 없는 경우 연중 무휴, 1일 24시간을 원칙으로 합니다. 단, 회사는 매장 환경에 따른 운영시간의 지정 및 운용이나, 천재지변 또는 전기공급 중단 등의 이에 준하는 불가항력으로 인하여 서비스를 제공할 수 없는 경우에는 서비스 제공에 관한 책임이 면제 됩니다. 또한 이용자의 귀책사유로 인한 서비스 이용의 장애에 대해 회사는 일체 책임을 지지 않습니다.
4. 회사는 이용자가 서비스를 이용하여 기대하는 손익이나 서비스를 통하여 획득한 자료 등으로 인한 손해에 관하여 책임을 지지 않습니다. 또한 회사는 이용자가 서비스에 게재한 정보, 자료, 사실의 신뢰도, 정확성 등의 내용에 관하여 책임을 지지 않습니다.
5. 회사는 서비스의 운용과 관련하여 사이트 화면, 홈페이지, 매장, 전자우편 등에 광고를 게재할 수 있습니다.
6. 회사는 광고업무와 관련하여 회원 전체 또는 일부의 개인 정보에 관한 통계자료를 작성하여 이를 사용할 수 있고, 사이트를 통한 서비스 제공을 위해 회원의 컴퓨터에 쿠키를 전송할 수 있습니다. 이 경우 회원은 쿠키의 수신을 거부하거나 쿠키의 수신에 대하여 경고하도록 사용하는 컴퓨터의 브라우저 설정을 변경할 수 있습니다. 이 외의 개인정보 보호에 관해서는 관련법령 및 회사의 "개인정보처리방침"에 준합니다.

### **제5조 (서비스의 중단)**

1. 회사는 컴퓨터 등 정보통신설비의 보수 점검 교체 및 고장, 통신의 두절, 매장환경 변경, 천재지변 등의 사유가 발생한 경우에는 서비스 제공을 일시적으로 중단할 수 있습니다.
2. 본 조 제1항에 의한 서비스 중단의 경우 회사는 제8조에 정한 방법으로 이용자에게 통지할 수 있습니다.

### **제3장 회원가입계약**

### **제6조 (회원가입)**

1. 만 14세 이상의 자라면 누구나(국내 거주 외국인 포함) 사이트가 정한 가입 양식에 따라 이 약관에 동의한다는 의사 표시를 함으로써 회원가입을 신청합니다.
2. 회사는 본 조 제1항과 같이 회원으로 가입할 것을 신청한 이용자 중 다음 각호에 해당하지 않는 한 회원으로 등록합니다.
① 만 14세 미만의 자가 법정대리인(부모 등)의 동의 없이 이용신청을 하는 경우
② 등록내용에 허위, 기재누락, 오기가 있는 경우
③ 다른 사람의 명의를 이용하여 신청하는 경우
④ 회원으로 등록하는 것이 사이트의 기술상 또는 업무 수행상 현저히 지장이 있다고 판단하는 경우
⑤ 이 약관에 의하여 회원 자격을 상실한 적이 있는 것으로 관련 법령에 근거하여 회사가 확인한 경우. 단, 회사가 재가입을 승낙한 경우를 제외
⑥ 기타 신청자의 귀책 사유로 이용 승낙이 곤란한 경우
3. 회원가입계약의 성립시기는 회사의 승낙이 회원에게 도달한 시점으로 합니다.
4. 회원은 개인정보관리화면을 통해 언제든지 본인의 개인정보를 열람하고 수정할 수 있습니다. 회원가입 신청 시 기재한 등록사항의 변경이 있는 경우, 즉시 변경사항을 온라인에서 최신의 정보로 수정하여야 합니다. 단, 이름, 아이디 등 기술적, 관리적으로 변경이 불가능한 정보는 수정할 수 없습니다. 
5. 회원은 아이디, 비밀번호 등을 적절하게 관리할 책임을 부담합니다. 회사의 귀책없이 회원 본인이 직접 수정하지 않거나 잘못 기재한 정보로 인하여 발생하는 손해는 당해 회원이 부담하며, 회사는 이에 대하여 아무런 책임을 지지 않습니다.6. 회사는 회원의 개인정보를 서비스를 제공하기 위한 목적 이외의 용도로 사용하거나 이용자의 동의 없이 제3자에게 제공하지 않습니다.
7. 회사는 회원의 개인정보를 보호하기 위한 정책을 수립하고 개인정보관리 책임자를 지정하여 이를 게시합니다.
8. 기타 회원의 개인정보 수집, 이용, 보유, 제공, 처리 등에 관한 사항은 관련 법령 및 개인정보 처리방침에 따릅니다.

### **제7조 (회원 탈퇴 및 자격상실)**

1. 회원은 회사에 언제든지 탈퇴(즉, 이용계약 해지)를 요청할 수 있으며 회사가 탈퇴요청 접수일로부터 24시간 이내 회원 탈퇴 처리를 함으로써 본 이용계약은 해지됩니다.단, 회원은 이용계약 해지 의사를 통지하기 전에 현재 진행중인 모든 상품의 거래를 완료하거나 철회 또는 취소하여야 하며, 거래의 철회 또는 취소로 인한 불이익은 회원 본인이 부담하여야 합니다. 또한, 회원이 회사에 대한 채무를 전부 이행(마이너스 포인트의 상환, 구입한 재화 대금 지급 등)하지 아니한 경우 회원이 당해 채무를 전부 이행할 때까지 회사는 회원 탈퇴 처리를 유보함으로써 회원의 이용계약 해지를 제한할 수 있습니다.
2. 회원탈퇴로 인해 발생한 불이익에 대한 책임은 회원 본인이 져야 하며, 이용계약이 해지되면 회사는 회원에게 부가적으로 제공한 각종 혜택을 별도 고지없이 회수할 수 있습니다.
3. 회원의 의사로 이용계약을 해지한 후 사이트의 재가입을 희망할 경우 회사는 회사의 자산을 보호하기 위한 목적(이용자가 회원 재가입, 임의 해지 등을 반복적으로 행함으로써 회사가 제공하는 각종 쿠폰, 이벤트 혜택 등의 경제상의 이익을 불•편법으로 수취하거나 이 과정에서 명의도용 등의 행위 우려가 있는 것으로 회사가 판단한 경우 등)으로 회원의 재가입을 제한할 수 있습니다.
4. 회사는 전자상거래등에서의소비자보호에관한법률 등 관련 법률에 의해 보존해야 할 필요가 있는 경우에는 회원의 개인정보를 일정기간 보유합니다.
5. 회원이 다음 각 호의 사유에 해당하는 경우, 회사는 회원자격 및 등급을 즉시 조정, 상실(이용계약 및/또는 개별계약 해지 포함) 시키거나 사이트 이용을 제한할 수 있고, 제한 기간은 회사가 정할 수 있습니다.
① 회원/비회원 등록 신청 시에 허위 내용 및 다른 사람의 명의를 허락 없이 이용하여 등록한 경우
② 사이트에 제공되는 정보를 변경하는 등 사이트의 운영을 방해한 경우
③ 다른 회원의 아이디(ID)를 부정 사용하는 행위
④ 범죄행위를 목적으로 하거나 기타 범죄행위와 관련된 행위
⑤ 선량한 풍속, 기타 사회질서를 해하는 행위
⑥ 타인의 명예를 훼손하거나 모욕하는 행위
⑦ 타인의 지적재산권 등의 권리를 침해하는 행위
⑧ 해킹행위 또는 컴퓨터 바이러스, 악성 프로그램의 유포 등 정보통신설비 및 전산망의 안전을 위협하는 행위
⑨ 타인의 의사에 반하여 광고성 정보 등 일정한 내용을 지속적으로 전송하는 행위
⑩ 서비스의 안전적인 운영에 지장을 주거나 줄 우려가 있는 일체의 행위
⑪ 사이트를 이용하여 법령과 이 약관이 금지하는 행위를 하는 경우
⑫  정보통신망이용촉진및정보보호에관한법률이 정한 1년간 계속적으로 이용실적(로그인 및 구매실적)이 없는 경우
⑬ 영업 방해, 상품 재판매, 다른 이용자의 구매기회 박탈 등을 목적으로 진의 없이 제품을 구매(예를 들어, 특정 인기 상품의 재고 선점 후 제3자와의 재판매약정 성립 시에만 상품 구매를 확정)하거나 구매한 제품을 반복적으로 환불, 하자 없는 제품의 반품 요청 또는 수선 의뢰, 또는 회사의 사전 허락없이 자동화된 수단(매크로 프로그램 등) 이나 제3자를 이용하여 상품을 구매하거나 구매 기회를 취득, 기타 상품, 포인트 및 쿠폰 정보 조작 등 회사의 원활한 영업 및 운영 정책에 지장을 초래하거나 다른 이용자의 권리를 침해하는 행위 
⑭ 멤버십 포인트 및 쿠폰, 기타 회원의 혜택을 부정하게 사용하는 경우
⑮ 기타 관계법령 및 본 약관상의 제반 규정을 위반하는 경우
6. 회사는 본 조 제5항에 해당되는 경우 이용계약을 해지 할 수 있습니다.
7. 회사가 이용계약을 해지하는 경우, 회사는 회원등록을 말소하며 회원에게 전자우편, 전화, 팩스 등 회사가 선택한 방법(이하 “통지방법”)을 통하여 해지사유를 밝혀 해지의사를 통지합니다. 이용계약은 회사의 해지의사를 회원에게 통지한 시점에 종료됩니다.
8. 회사가 이용계약을 해지하더라도, 이용계약 해지 이전에 회사와 회원 간에 이미 체결된 개별계약의 완결에 관해서는 이 약관이 계속 적용될 수 있습니다. 단, 회사는 회원에게 부가적으로 제공한 각종 혜택을 회수할 수 있습니다.

### **제8조 (회원에 대한 통지)**

1. 회사가 회원에 대한 통지를 하는 경우, 회원이 정하거나 사이트 이용에 사용한 방법(email, SMS 등)으로“통지방법”을 삼을 수 있습니다. 단, 통지는 국문을 원칙으로 합니다.
2. 회사는 7일 이상의 기간 동안 사이트에 공지사항을 게시 함으로써 개별 통지에 갈음할 수 있습니다

### **제4장 개별계약**

### **제9조 (구매신청)**

사이트 이용자는 이하의 방법에 의하여 구매를 신청합니다.
1. 사이트에서 구매 신청하는 경우 다음의 절차에 의하여야 합니다.
① 재화 또는 용역의 선택
② 주문자 정보 및 배달지역 정보 입력
③ 결제방법의 선택
④ 결제 버튼을 클릭 
2. 매장에서 구매 신청하는 경우 다음의 절차에 의하여야 합니다.
① 재화 또는 용역의 선택
② 결제방법의 선택 및 결제

### **제10조 (개별 계약의 성립)**

1. 회사는 제9조에 따른 구매신청에 대하여 승낙할 수 있습니다. 단, 아래 각 호의 어느 하나에 해당되는 경우는 그 예외로 합니다.
① 이용자의 신청 내용에 허위, 기재누락, 오기가 있는 경우
② 기타 구매 신청에 승낙하는 것이 사이트 기술상 또는 업무 수행상 현저히 지장이 있다고 판단하는 경우
2. 회사의 승낙이 제11조 제1항의 수신확인 통지형태로 이용자에게 도달한 시점에 구매계약이 성립한 것으로 봅니다. 단, 매장 구매신청 시 결제완료 시 구매계약이 성립한 것으로 봅니다.
3. 미성년자의 구매 시 법정 대리인이 해당 계약에 대하여 동의를 하지 아니하면, 미성년자 본인 또는 법정대리인이 그 계약을 취소할 수 있습니다. 미성년자의 거래에 관한 상세한 사항은 관련 법령이 정한 바에 의합니다.

### 제5장 대금결제

### **제11조**(수신확인통지)

1. 회사는 사이트를 통한 이용자의 구매 신청이 있는 경우 이용자에게 “통지방법”으로 수신확인통지를 합니다.
2. 수신확인통지를 받은 이용자는 구매신청 의사표시와 불일치 등이 있는 경우 수신확인통지를 받은 후 즉시 구매신청변경 또는 취소를 요청할 수 있습니다.
3. 회사는 배송 전 이용자의 구매신청 변경 또는 취소 요청이 있는 경우 즉시 그 요청사항을 처리합니다.

### **제12조 (대금결제방법)**

상품 또는 용역의 구매에 대한 결제는 다음의 방법에 의합니다.
1. 회사가 승인하는 신용카드에 의한 결제
2. 회사가 승인하는 은행에 실시간 계좌이체에 의한 결제
3. 회사가 승인하는 통신사에 의한 휴대폰 결제
4. 회사가 승인하는 쿠폰 사용에 의한 결제
5. 기타 회사가 인정하는 방법에 의한 결제

### **제13조 (포인트제도의 운영)**

포인트 제도의 운영에 관한 구체적인 사항은 리클럽 이용약관 제7조(멤버십 포인트 및 쿠폰의 이용 및 제한)에서 정한 바에 따릅니다.

### **제14조 (쿠폰의 정의 및 사용)**

쿠폰제도의 운영에 관한 구체적인 사항은 리클럽 이용약관 제7조(멤버십 포인트 및 쿠폰의 이용 및 제한)에서 정한 바에 따릅니다.

### **제15조 (연체)**

1. 상품 또는 용역의 구매에 대한 신용카드, 통신사 등을 통한 결제가 연체되는 경우, 이용자가 지정하는 신용카드, 통신사 등 결제업자의 약관이 적용되며, 결제업자로부터 회사가 결제의 무효 또는 판매부인의 통지가 있는 경우 회사는 즉시 이용자의 사이트 이용을 일단 정지하고 (회원 아이디 및 비밀번호 사용정지) 지체없이 이용자에 대해 결제대금 연체에 따른 지급 방식 안내와 익월부터 대금결제방법의 변경 여부에 대한 확인 유무선 수단을 통한 연락을 합니다.
2. 이용자가 사이트에 제공한 연락처로 연락이 되지 않을 경우 또는 이용자가 약속한 날, 기타 회사가 지정 날까지 결제대금 지급이 확인이 되지 않는 경우 회사는 당해 이용자의 사이트 이용을 제한할 수 있습니다.

### **제6장 배송, 취소, 환불**

### **제16조 (재화 등의 공급 등)**

1. 회사는 이용자와 상품 등 공급시기에 관하여 따로 약정하거나 상품 판매페이지에 고지하지 않는 한, 이용자가 청약을 한 날로부터 7일 이내에 상품 등의 공급에 필요한 조치(예를 들어, 배송사업자에게 배송 의뢰, 출고지시 또는 제품 인계, 이하 같음)를 합니다. 단, 이용자가 상품 등을 공급받기 전에 미리 재화등의 대금을 전부 또는 일부 지급한 경우에는 이용자가 그 대금을 전부 또는 일부 지급한 날부터 3영업일 이내에 재화등의 공급을 위하여 필요한 조치를 합니다.
2. 배송소요기간은 주문일 익일을 기산일로 하며 비수기를 기준으로 다음 각호와 같습니다.
① 일반택배(주문일, 공휴일제외), 서울/경기 지역 : 3-6일, 그 외 지역 : 3-9일(제주도 및 도서산간지역의 경우 개별계약에 따름)
② 공휴일 기타 휴무일에는 배송 되지 않습니다.
③ 천재지변 등 불가항력적인 사유 발생시 그 해당기간 동안은 배송소요기간에서 제외됩니다.
3. 상품 수령지가 대한민국 이외의 지역으로 되어 있는 배송 주문은 원칙적으로 금지되며 회사는 이용자의 구매 신청일로부터 3일 이내에 배송지의 변경을 요구할 수 있고, 이러한 요구에도 불구하고 이용자가 3일 이내에 국내 배송지로의 변경이 이루어지지 않는 경우 회사는 그 배송을 유보할 수 있습니다. (또는, 구매신청에 대한 승낙을 거절할 수 있습니다)
4. 배송의 완료는 이용자가 지정한 장소(이용자가 택배사에 별도로 지정한 장소를 포함)로 구매 신청한 상품이 도달한 시점을 말합니다. 단, 이용자가 지정한 배송지가 택배사로 하여금 오인하거나 달리 해석될 수 있는 장소(예를 들어, 슈퍼마켓, 마을회관, 공공건물 및 공공시설 등) 인 경우 또는 제3자를 통한 상품 수령의 요청, 배송정보 오기재 등으로 인해 이용자에게 발생한 손해에 대해서는 회사가 일체 책임을 부담하지 않습니다.

### **제17조 (환불, 반품 및 교환)**

1. 이용자는 제11조 제1항의 수신확인의 통지를 받은 날 또는 상품을 배송 받은 날부터 7일 이내에 청약 철회를 할 수 있습니다. 단, 매장 구매인 경우 상품을 구매한 날로부터 15일 이내에 청약 철회를 할 수 있습니다.
2. 이용자는 상품을 배송 받은 경우 다음 각호의 어느 하나에 해당하는 경우에는 반품 및 교환을 할 수 없습니다. 
① 이용자에게 책임 있는 사유로 재화 등이 멸실 또는 훼손된 경우다만, 재화 등의 내용을 확인하기 위하여 포장 등을 훼손한 경우에는 사전에 청약철회 제한에 관해 고지 하지 않은 한 청약철회 등을 할 수 있습니다.
② 이용자의 사용 또는 일부 소비에 의하여 재화 등의 가치가 현저히 감소한 경우
③ 시간의 경과에 의하여 재판매가 곤란할 정도로 재화 등의 가치가 현저히 감소한 경우 
④ 같은 성능을 지닌 재화 등으로 복제가 가능한 경우 등의 사유로 그 원본인 재화 등의 포장(예를들어, 대화카드 박스 및 기타 제품의 일부로 구성되는 포장)을 훼손한 경우
⑤ 사이트에서 사전에 당해 상품 또는 용역의 개별 계약에 대하여 청약철회 제한에 관해 고지한 경우
3. 이용자는 본 조 제1항 및 제2항의 규정에 불구하고 사이트 내에서 재화 등의 내용이 표시 및 광고 내용과 다르거나 계약내용과 다르게 이행된 때에는 당해 재화 등을 공급 받은 날부터 3개월 이내, 그 사실을 안 날 또는 알 수 있었던 날부터 30일 이내에 청약 철회 등을 할 수 있습니다.
4. 이용자는 본 조 제1항에 따라 상품의 구매를 취소(청약 철회)하는 경우에는 이미 제공 받은 상품을 반환하여야 하며, 회사는 이미 지급받은 상품의 대가를 상품 반환 받은 날부터 3영업일 이내에 이용자 또는 결제업자에게 환불하거나 결제업자에게 결제 대금의 청구를 정지하거나 취소할 것을 요청합니다. 단, 결제업자에게 환불하는 경우 이용자에게 별도 통지합니다.
5. 이용자는 본 조 제4항에 따라 이미 제공 받은 상품의 반환을 위해 회사에게 배송사업자의 지정을 요청(이하 “상품 반환대행 서비스”) 할 수 있습니다. 단, 이용자의 귀책(예를 들어, 배송사업자가 2~3회 이상 이용자가 지정한 상품 인계장소에 방문했음에도 상품을 반환하지 않음) 또는 회사 및/또는 배송사업자의 사정으로 인해 반환요청일로부터 15일 이내에 지정된 배송사업자에게 상품이 반환되지 않은 경우, 이용자는 회사에게 배송사업자의 재지정을 요청해야 하며 이용자가 재지정을 요청하지 않는 한 회사는 상품 수거를 위한 별도 추가 안내를 하지 않습니다.
6. 이용자는 반환요청일로부터 15일 이후에도 배송사업자 재지정을 요청하거나 상품의 반환을 할 수 있습니다. 단, 회사는 이용자의 귀책으로 인해 이용자에게 발생가능한 보관료 등 추가비용을 부담하지 않으며, 회사 또는 배송사업자에게 손해가 발생한 경우 이용자에게 상품 반환대행 서비스와 관련된 제반비용을 청구할 수도 있습니다.
7. 본 조 제5항 및 제6항에 따른 회사의 “상품 반환대행 서비스” 제공에도 불구하고, 이용자는 본 조 제1항, 제3항에 따른 청약철회 권리 및 본 조 제4항에 따른 대금반환청구권을 자유롭게 행사할 수 있습니다.
8. 본 조 제1항에 따라 상품의 구매가 취소(청약 철회)된 경우 그 반환에 필요한 일체의 비용은 이용자가 부담합니다. 단, 재화 등의 내용이 표시•광고 내용과 다르거나 회사의 귀책으로 계약내용과 다르게 이행되어 청약철회 등을 하는 경우 또는 회사의 귀책에 따른 제품의 하자로 인한 경우에 있어서 재화 등의 반환에 필요한 비용은 회사가 부담합니다.
9. 구매 신청한 상품 또는 용역의 품절 등의 사유로 상품 또는 용역의 제공이 불가한 때에는 회사는 지체 없이 그 사유를 이용자에게 통지하고, 환불 절차는 본 조 제4항에 따릅니다.

### **제7장 회사와 이용자의 의무사항**

### **제18조 (개인정보보호)**

회사는 이용자의 개인정보를 보호하기 위하여 최선을 다하고 있으며 이와 관련하여서는 개인정보 처리방침에 따릅니다.

### **제19조 (회사의 의무)**

1. 회사는 법령과 이 약관이 정하는 바에 따라 지속적이고, 안정적으로 재화 또는 용역을 제공하는데 최선을 다합니다.
2. 회사는 이용자가 안전하게 서비스를 이용할 수 있도록 이용자의 개인정보(신용정보 포함)보호를 위한 보안 시스템을 갖추어야 합니다.
3. 회사는 이용고객으로부터 제기되는 의견이나 불만이 정당하다고 객관적으로 인정될 경우에는 적절한 절차를 거쳐 즉시 처리하여야 합니다. 다만, 즉시 처리가 곤란한 경우는 이용자에게 그 사유와 처리일정을 통보하여야 합니다.
4. 회사는 소비자보호단체의 소비자보호 업무의 추진에 필요한 자료 등의 제공요구에 적극 협력합니다.
5. 회사가 상품이나 용역에 대하여「표시•광고의공정화에관한법률」제3조 소정의 부당한 표시•광고행위를 함으로써 이용자가 손해를 입은 때에는 이를 배상할 책임을 집니다.

### **제20조 (이용자의 의무)**

1. 이용자는 다음 행위를 하여서는 안됩니다.
① 회원가입, 구매, 결제의 신청 또는 변경 시 허위내용의 등록
② 사이트에 게시된 정보의 무결성, 최신성 훼손 등 부적절한 변경
③ 서비스 이용을 위해 필요한 정보 이외의 정보(컴퓨터 프로그램 등) 등의 송신 또는 게시
④ 회사, 기타 제3자의 저작권 등 지적재산권에 대한 침해
⑤ 회사, 기타 제3자의 명예를 손상시키거나 업무를 방해하는 행위
⑥ 외설 또는 폭력적인 메시지•화상•음성 기타 공서 양속에 반하는 정보를 사이트에 공개 또는 게시하는 행위⑦ 다른 이용자의 아이디, 비밀번호를 도용하는 행위
⑧ 기타 관계 법령에 위반하거나 회사의 업무를 방해하는 등 기타 회사가 부적절하다고 판단하는 행위
2. 회사는 본 조 제1항의 사항 등 사이트의 운영상 부적절 하다고 판단한 정보가 사이트에 게시되거나 사이트와 링크된 곳에 게시된 경우, 회사는 이용자 기타 정보의 게시를 행한 자의 승낙 및 사전 통지 없이 사이트에 게재된 당해 정보를 삭제하거나 사이트에 확장된 링크를 차단할 수 있습니다.단, 회사는 이러한 정보의 삭제•링크의 차단 등을 할 의무를 지지 않습니다.

### **제21조 (회원의 아이디 및 비밀번호 관리)**

1. 아이디와 비밀번호에 대한 관리책임은 회원에게 있으며, 이를 제3자가 이용하도록 허락하거나 양도, 이전 해서는 안됩니다.
2. 회사는 이용자 관리업무를 수행 하므로, 회원의 아이디로 인해 개인정보유출의 우려가 있거나, 반사회적 또는 미풍양속에 어긋나거나 회사의 정책에 반하는 경우 회원 아이디의 사용을 제한할 수 있습니다. 회원 아이디를 변경하고자 하는 경우에도 같습니다.
3. 회원 아이디 및 비밀번호 부정사용에 의하여 발생되는 사용상 부주의 또는 제3자에 의한 부정사용 등에 대한 모든 책임은 해당 회원에게 있습니다.
4. 회원이 자신의 아이디 및 비밀번호를 도난 당하거나 제3자가 사용하고 있음을 인지한 경우에는 즉시 회사에 통지하고 회사의 안내에 따라야 합니다. 단, 회원이 이를 회사에 통지하지 않거나 회사의 안내에 따르지 않아 발생한 손해에 대해서는 회사가 책임을 지지 않습니다.
5. 회원은 원칙적으로 하나의 회원 아이디만을 개설할 수 있습니다.

### **제8장 기타**

### **제 22 조 (저작권의 보호)**

1. 회사가 작성한 저작물에 대한 저작권 기타 지적재산권(2차적 저작물 작성권 등 포함)은 회사에 귀속합니다.
2. 이용자는 회사의 서비스를 이용함으로써 얻은 정보 중 회사에게 지적재산권이 귀속된 정보를 회사의 사전 승낙 없이 복제, 송신, 출판, 배포, 방송 기타 방법에 의하여 영리목적으로 이용하거나 제3자에게 이용하게 하여서는 안됩니다.
3. 회사는 이용자가 등록한 게시글 또는 상품평을 검색에 노출하거나, 판촉, 홍보 및 기타의 자료를 무상으로 사용할 수 있습니다. 다만, 회사는 해당 게시물을 등록한 이용자가 게시물의 삭제와 함께 사용중지를 요청한 경우에는 즉시 사용을 중지합니다.

### **제23조 (게시물의 관리)**

1. 회사는 회원이 게시글 또는 상품평에 대한 모든 권리와 책임은 이를 게시한 회원에게 있습니다. 단, 회사는 회원이 다음 각호에 해당하는 경우 사전 통지 없이 해당 게시글 또는 상품평을 삭제하거나 열람을 제한하는 등의 조치를 취할 수 있습니다.
①타인의 권리나 명예, 신용 기타 정당한 이익을 침해하거나 심한 모욕을 주는 경우
② 공공질서 및 미풍양속에 위반되는 내용인 경우
③ 범죄행위와 관련된 내용을 포함하는 경우
④ 회사의 저작권, 제3자의 저작권 등 기타 권리를 침해하는 내용인 경우
⑤ 외설 또는 폭력적인 메시지•화상•음성 기타 공서 양속에 반하는 정보를 포함하는 경우
⑥ 회사의 사전 승인 없이 상업광고, 판촉 내용을 게시하거나 타 사이트의 링크를 게시하는 경우
⑦ 상품 및 용역 기타 서비스 이행과 관련 없는 내용인 경우
⑧ 허위의 사실을 진실인 것처럼 호도하여 회사의 업무를 방해하거나 회사의 정당한 요청에 불구하고 3회 이상 사실관계 확인을 거부한 경우
⑨ 기타 이 약관 또는 관련 법령에 위반된다고 회사가 판단한 경우
2. 본 조 제1항에 해당하는 게시글 또는 상품평으로 인하여 법률상 이익이 침해된 자는 관련 법령이 정한 절차에 따라 회사에 해당 게시글 또는 상품평의 게시중단 및 삭제 등을 요청할 수 있으며, 회사는 관련 법령 및 회사의 정책에 따라 조치를 취할 수 있습니다
3. 본 조 제1항에 해당하는 게시글 또는 상품평으로 인하여 회사가 제3자에 대하여 손해배상금을 지급하게 되는 경우(조정, 판결, 민사, 형사 불문) 해당 회원은 회사가 제3자에게 배상금을 지급하는 즉시 동일 금액 상당을 회사에게 지급할 의무를 부담 합니다.
4. 회원 탈퇴 이후에는 해당 회원이 탈퇴 이전에 작성한 게시글 또는 상품평의 일부 또는 전부의 편집이나 삭제를 요청할 수 없고, 회원은 회원 탈퇴 이전에 자신이 작성한 게시글 또는 상품평에 대해 수정, 삭제 등 필요한 조치를 완료해야 합니다.

### **제24조 (면책조항)**

1. 회사는 천재지변, 전쟁 및 기타 이에 준하는 불가항력으로 인하여 서비스를 제공할 수 없는 경우에는 서비스 제공에 대한 책임이 면제됩니다.
2. 회사는 기간통신 사업자가 전기통신 서비스를 중지하거나 정상적으로 제공하지 아니하여 손해가 발생한 경우 책임이 면제됩니다.
3. 회사는 이용자의 귀책사유로 인한 서비스 이용의 장애 또는 손해에 대하여 책임을 지지 않습니다.
4. 회사는 이용자가 서비스를 이용함으로써 기대되는 수익을 얻지 못하거나 서비스를 통해 얻은 자료를 이용하여 발생한 손해에 대해서는 책임을 부담하지 않습니다.
5. 이용자 또는 제3자가 사이트 및 서비스 화면에 게재한 각종 정보, 자료, 사실 등의 내용에 관한 신뢰도 또는 정확성 등에 대하여 해당 이용자와 제3자가 책임을 지며, 회사는 이를 보증 하거나 그와 관련하여 어떠한 책임도 부담하지 아니 합니다.
6. 회사는 서비스이용과 관련하여 이용자의 고의 또는 과실로 인하여 이용자 또는 제3자에게 발생한 손해에 대하여는 아무런 책임을 부담하지 않습니다.
7. 회사의 사이트 및 서비스 화면에서 링크, 배너 등을 통하여 연결된 회사(이하 “피연결회사”)와 이용자 간에 해당 피연결회사가 독자적으로 제공하는 재화 등에 대하여 이루어진 거래의 경우, 회사는 이에 대해서 책임을 지지 않습니다.

### **제25조 (분쟁해결)**

1. 사이트는 이용자로부터 제출되는 불만사항 및 의견은 우선적으로 그 사항을 처리합니다. 다만, 신속한 처리가 곤란한 경우에는 이용자에게 그 사유와 처리일정을 즉시 통보합니다.
2. 사이트와 이용자간에 발생한 분쟁은 전자문서및전자거래기본법 제 32조 및 동 시행령 제20조에 의하여 설치된 전자거래분쟁 조정위원회의 조정에 따를 수 있습니다.

### **제26조 (손해배상 등)**

서비스 이용과 관련하여 이용자의 귀책 사유로 회사 및/또는 제3자에게 손해가 발생한 경우, 회사는 당해 이용자에게 손해 배상을 청구할 수 있습니다.

### **제27조 (재판권 및 준거법)**

1. 서비스 이용으로 발생한 분쟁에 대해 소송이 제기되는 경우 서울중앙지방법원을 그 관할법원으로 합니다.
2. 회사와 이용자 간에 제기된 전자상거래 소송에는 대한민국법을 적용합니다.

### **제28조 (약관 외 준칙)**

1. 이 약관에서 정하지 아니한 사항과 이 약관의 해석에 관하여는 전자상거래등에서의소비자보호에관한법률, 약관의규제등에관한법률, 공정거래위원회가 정하는 전자상거래등에서의소비자보호지침 및 관계법령 또는 상관례에 따릅니다.
2. 회사는 필요한 경우 특정 서비스에 관하여 적용될 사항(이하 “개별약관”)을 정하여 이를 사이트 서비스 화면 게시 등을 통하여 공지할 수 있습니다.
3. 회사는 필요한 경우 서비스 이용과 관련된 세부적인 내용(이하 "이용정책")을 정하여 이를 사이트 서비스 화면 게시 등을 통하여 공지할 수 있습니다.
4. 회원은 항상 개별약관이나 이용정책의 내용에 변경이 있는지 여부를 주시하여야 하며, 변경사항의 공지가 있을 시에는 이를 확인하여야 합니다.

### **제29조 (기타 조항)**

1. 회사는 필요한 경우 특정 서비스나 기능의 전부 또는 일부를 사이트를 통해 미리 공지한 후 일시적 또는 영구적으로 수정하거나 중단할 수 있습니다.2. 이용자는 회사의 서면동의 없이 이 약관상의 권리와 의무를 제3자에게 양도하거나 처분, 담보로 제공 할 수 없습니다.3. 이 약관과 관련하여 당사자간의 합의에 의하여 추가로 작성된 계약서, 협정서, 통보서 등과 회사의 정책변경, 법령의 제•개정 또는 공공기관의 고시나 지침 등에 의하여 회사가 사이트를 통해 공지하는 내용도 이용약관의 일부를 구성합니다.

[부칙]제1조(시행일) 이 약관은 2021년 7월 1일부터 시행 합니다.`;

declare global {
    interface Window {
      IMP: any;
    }
}

const { IMP }  = window;
IMP.init("imp17113033");

function PaymentPage({ match }: Props) {
    let id = Number.parseInt(match.params.id || '1');
    let productInformation = React.useMemo(() => productInformationArray[id - 1], [id]);
    let scroll = useScroll();
    let [paymentSummaryPositionFixed, setPaymentSumaryPositionFixed] = React.useState<boolean>(false);
    let [orderData, setOrderData] = React.useState<OrderType>({ merchant_uid: "", amount: 0, productName: "", orderName: "", orderEmail: "", orderCellphone: "", zipCode: "", fullAddress: "", detailAddress: "", success: "false" });
    let [searchPostCode, setSearchPostCode] = React.useState<boolean>(false);
    let [purchaseMethod, setPurchaseMethod] = React.useState<purchaseMethodInterface>();
    let [paymentComplete, setPaymentComplete] = React.useState<boolean>(false);
    let [agreeMore1, setAgreeMore1] = React.useState<boolean>(false);
    let [agreeMore2, setAgreeMore2] = React.useState<boolean>(false);
    let [agreeMore3, setAgreeMore3] = React.useState<boolean>(false);
    let [agree, setAgree] = React.useState<boolean>(false);
    React.useEffect(() => {
        setPaymentSumaryPositionFixed(scroll >= 154);
    }, [scroll]);
    React.useEffect(() => {
        window.scrollTo(0, 0)
        setOrderData({...orderData, merchant_uid: `ORD00${id}-` + new Date().getTime(), amount: productInformation.price, productName: productInformation.title});
    }, [productInformation]);
    let checkValidate = () => {
        for(let [key, value] of Object.entries(orderData)) {
            if(key === "orderName" || key === "orderEmail" || key === "orderCellphone" || key === "zipCode" || key === "fullAddress") {
                if(value === "") {
                    return false;
                }
            }
        }
        return true;
    }

    const requestPay = () => {
        IMP.request_pay({
            pg: "html5-inicis",
            pay_method: purchaseMethod?.kgName,
            merchant_uid: orderData.merchant_uid,
            name: productInformation.title,
            amount: orderData.amount,
            buyer_name: orderData.orderName,
            buyer_tel: orderData.orderCellphone,
            buyer_email: orderData.orderEmail
        }, async (rsp : any) => {
            if(rsp.success) {
                let data = await rspSuccess(rsp, orderData.orderCellphone, productInformation.title);
                switch(data.status) {
                    case "success":
                        window.scrollTo(0, 0);
                        setPaymentComplete(true);
                        break;
                }
    
            } else {
                let data = await getOrderData(orderData.merchant_uid);
                if(data && data.success === "webhooksuccess") {
                    window.scrollTo(0, 0);
                    setPaymentComplete(true);
                } else {
                    alert(`결제에 실패하였습니다. 에러 내용: ${rsp.error_msg}`);
                }
            }
        })
    }

    return (
        <>
            <div className="paymentPage">
                <Header additionalClass = ""></Header>
                {!paymentComplete && <>
                    <div className="getPaymentInformationBlock">
                        <div className="title">주문/결제</div>
                        <div className="getPaymentInformationContainer buyer">
                            <div className="titleContainer">
                                <div className="title">주문자</div>
                            </div>
                            <div className="inputContainer">
                                <div className="inputElement">
                                    <div className="name">성명</div>
                                    <input type="text" placeholder = "이름을 입력해주세요." onChange = {(e:any) => setOrderData({...orderData, orderName: e.target.value})} value = {orderData.orderName} />
                                </div>
                                <div className="inputElement">
                                    <div className="name">이메일</div>
                                    <input type="text" className = "midium" placeholder = "이메일을 입력해주세요." onChange = {(e: any) => setOrderData({...orderData, orderEmail: e.target.value})} value = {orderData.orderEmail} />
                                </div>
                                <div className="inputElement">
                                    <div className="name">전화번호</div>
                                    <input type="text" placeholder = "'-'없이 전화번호를 입력해주세요." onChange = {(e: any) => setOrderData({...orderData, orderCellphone: e.target.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1')})} value = {orderData.orderCellphone} />
                                </div>
                            </div>
                        </div>
                        <div className="getPaymentInformationContainer shippingPlace">
                            <div className="titleContainer">
                                <div className="title">배송지</div>
                                {false && <div className="checkContainer">
                                    <div className="checkBox">
                                        <div className="checked"></div>
                                    </div>
                                    <div className="name">위와 동일하게 채우기</div>
                                </div>}
                            </div>
                            <div className="inputContainer">
                                <div className="inputElement">
                                    <div className="name">받는 사람</div>
                                    <input type="text" placeholder = "받는 사람의 이름을 입력해주세요."/>
                                </div>
                                <div className="inputElement">
                                    <div className="name">연락처</div>
                                    <input type="text" placeholder = "받는 사람의 연락처를 입력해주세요." />
                                </div>
                                <div className="inputElement">
                                    <div className="name">주소</div>
                                    <button className="searchPostCode" onClick = {() => setSearchPostCode(true)}>주소찾기</button>
                                    <input type="text" value = {orderData.zipCode}/>
                                    <input type="text" className = "long" style = {{marginTop: "22px"}} value = {orderData.fullAddress}/>
                                    <input type="text" className = "long" style = {{marginTop: "22px"}} placeholder = "상세 주소를 입력해주세요." onChange = {(e) => setOrderData({...orderData, detailAddress: e.target.value})} value = {orderData.detailAddress}/>
                                    {searchPostCode && <PopupPostCode setOrderData = {setOrderData} orderData = {orderData} setSearchPostCode = {setSearchPostCode}></PopupPostCode>}
                                </div>
                            </div>
                        </div>
                        <div className="getPaymentInformationContainer product">
                            <div className="titleContainer">
                                <div className="title">주문상품</div>
                            </div>
                            <div className="productInformationContainer">
                                <img src={productInformation.imageUri + "/productThumbnail.png"} alt="" className="mainImage" />
                                <div className="textContainer">
                                    <div className="productName">{productInformation.title}</div>
                                    <div className="optionsList">
                                        <div className="option">옵션 1번</div>
                                        <div className="option">무료 배송</div>
                                    </div>
                                    <div className="vector"></div>
                                    <div className="price">{productInformation.price}원</div>
                                </div>
                            </div>
                        </div>
                        <div className="getPaymentInformationContainer purchaseMethod">
                            <div className="titleContainer">
                                <div className="title">결제 방법</div>
                            </div>
                            <div className="purchaseMethodContainer">
                                {purchaseMethodArray.map((purchaseMethodElement) => {
                                    return (
                                        <div className={"purchaseMethodElement" + (purchaseMethod === purchaseMethodElement ? ' selected' : '')} onClick = {() => setPurchaseMethod(purchaseMethodElement)}>
                                            <div className="icon">{purchaseMethodElement.vector}</div>
                                            <div className="name">{purchaseMethodElement.name}</div>
                                        </div>
                                    )
                                })}
                            </div>
                        </div>
                    </div>
                    <div className={"paymentSummaryBlock" + (paymentSummaryPositionFixed ? ' fixed' : '')}>
                        <div className="title">결재금액</div>
                        <div className="priceList">
                            <div className="priceElement">
                                <div className="name">총 상품 금액</div>
                                <div className="price">{productInformation.price}원</div>
                            </div>
                            <div className="priceElement">
                                <div className="name">배송비</div>
                                <div className="price">0원</div>
                            </div>
                        </div>
                        <div className="vector"></div>
                        <div className="totalPrice">
                            <div className="name">최종 결제 금액</div>
                            <div className="price">{productInformation.price}원</div>
                        </div>
                        <div className="vector"></div>
                        <div className="agreeContainer">
                            <div className="agreeElement check" onClick = {() => setAgree(!agree)}>
                                <div className="checkBox">
                                    {agree && <div className="checked"></div>}
                                </div>
                                <div className="name">아래 내용에 모두 동의합니다. (필수)</div>
                            </div>
                            <div className="agreeElement more">
                                <div className="name">개인정보 수집 이용 및 제 3자 제공 동의</div>
                                <button className="moreButton" onClick = {() => setAgreeMore1(!agreeMore1)}>{leftVector}</button>
                                {agreeMore1 && <textarea className="detail">{agreeText1}</textarea>}
                            </div>
                            <div className="agreeElement more">
                                <div className="name">구매 이용 약관</div>
                                <button className="moreButton" onClick = {() => setAgreeMore2(!agreeMore2)}>{leftVector}</button>
                                {agreeMore2 && <textarea className="detail">{agreeText2}</textarea>}
                            </div>
                            <div className="agreeElement more">
                                <div className="name">구매 조건 및 결제 진행 동의</div>
                                <button className="moreButton" onClick = {() => setAgreeMore3(!agreeMore3)}>{leftVector}</button>
                                {agreeMore3 && <textarea className="detail">{"주문할 상품의 상품명, 상품가격, 배송정보를 확인하였으며, 구매 진행에 동의 하시겠습니까? (전자상거래법 제8조 제2항)"}</textarea>}
                            </div>
                            <div className="agreeElement">
                                <div className="name">본인은 만 14세 이상이며, 주문 내용을 확인하였습니다.</div>
                            </div>
                        </div>
                        <button className="purchaseButton" onClick = {async () => { 
                            if(checkValidate() && agree) {
                                if(await addNewOrder(orderData)) {
                                    await requestPay();
                                }
                                else {
    
                                }
                            } else if(!agree) {
                                alert("구매 이용 약관 및 개인정보 수집에 동의해주십시오.");
                            } else if(purchaseMethod === null) {
                                alert("결제 방법을 선택해주십시오.");
                            }
                            else {
                                alert("입력하신 정보가 잘못되었습니다.");
                            }
                        }}>{productInformation.price}원 결제하기</button>
                    </div>
                </>}
                {paymentComplete && <div className = "paymentCompleteBlock">
                    <div className="imageContainer">
                        <div className="cardVector">{bigCardVector}</div>
                        <div className="checkVector">{checkVector}</div>
                    </div>
                    <div className="textContainer">
                        <div style = {{fontSize: '16px'}}>주문결제가</div>
                        <div>완료되었습니다.</div>
                    </div>
                    <div className="tableContainer">
                        <div className="table">
                            <div className="tableRow">
                                <div className="name">주문상품</div>
                                <div className="detail">{productInformation.title}</div>
                            </div>
                            <div className="tableRow">
                                <div className="name">배송지</div>
                                <div className="detail">{'(' + orderData.zipCode + ')' + orderData.fullAddress + " " + orderData.detailAddress}</div>
                            </div>
                            <div className="tableRow">
                                <div className="name">결제 금액</div>
                                <div className="detail">{productInformation.price}</div>
                            </div>
                        </div>
                    </div>
                    <div className="buttonContainer">
                        <Link to = '/sellmain'><button className="goShoppingButton">쇼핑 계속하기</button></Link>
                        <button className="goOrderPageButton">주문현황 보기</button>
                    </div>
                </div>}
                <Footer additionalClass = ""></Footer>
            </div>
        </>
    )
}

export default PaymentPage;